/**
 * This class is generated by jOOQ
 */
package com.skcraft.plume.common.service.sql.model.log.tables;


import com.skcraft.plume.common.service.sql.model.log.Keys;
import com.skcraft.plume.common.service.sql.model.log.tables.records.LogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Log extends TableImpl<LogRecord> {

	private static final long serialVersionUID = -553626437;

	/**
	 * The reference instance of <code>log.log</code>
	 */
	public static final Log LOG = new Log();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<LogRecord> getRecordType() {
		return LogRecord.class;
	}

	/**
	 * The column <code>log.log.id</code>.
	 */
	public final TableField<LogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>log.log.time</code>.
	 */
	public final TableField<LogRecord, Timestamp> TIME = createField("time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>log.log.user_id</code>.
	 */
	public final TableField<LogRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>log.log.world_id</code>.
	 */
	public final TableField<LogRecord, Short> WORLD_ID = createField("world_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>log.log.x</code>.
	 */
	public final TableField<LogRecord, Integer> X = createField("x", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>log.log.y</code>.
	 */
	public final TableField<LogRecord, Short> Y = createField("y", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>log.log.z</code>.
	 */
	public final TableField<LogRecord, Integer> Z = createField("z", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>log.log.action</code>.
	 */
	public final TableField<LogRecord, Short> ACTION = createField("action", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>log.log.data</code>.
	 */
	public final TableField<LogRecord, byte[]> DATA = createField("data", org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

	/**
	 * Create a <code>log.log</code> table reference
	 */
	public Log() {
		this("log", null);
	}

	/**
	 * Create an aliased <code>log.log</code> table reference
	 */
	public Log(String alias) {
		this(alias, LOG);
	}

	private Log(String alias, Table<LogRecord> aliased) {
		this(alias, aliased, null);
	}

	private Log(String alias, Table<LogRecord> aliased, Field<?>[] parameters) {
		super(alias, com.skcraft.plume.common.service.sql.model.log.Log.LOG, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<LogRecord, Integer> getIdentity() {
		return Keys.IDENTITY_LOG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<LogRecord> getPrimaryKey() {
		return Keys.KEY_LOG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<LogRecord>> getKeys() {
		return Arrays.<UniqueKey<LogRecord>>asList(Keys.KEY_LOG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<LogRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<LogRecord, ?>>asList(Keys.FK_LOG_WORLD_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Log as(String alias) {
		return new Log(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Log rename(String name) {
		return new Log(name, null);
	}
}
