/**
 * This class is generated by jOOQ
 */
package com.skcraft.plume.common.service.sql.model.log.tables.records;


import com.skcraft.plume.common.service.sql.model.log.tables.Log;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogRecord extends UpdatableRecordImpl<LogRecord> implements Record9<Integer, Timestamp, Integer, Short, Integer, Short, Integer, Short, byte[]> {

	private static final long serialVersionUID = 1330695844;

	/**
	 * Setter for <code>log.log.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>log.log.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>log.log.time</code>.
	 */
	public void setTime(Timestamp value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>log.log.time</code>.
	 */
	public Timestamp getTime() {
		return (Timestamp) getValue(1);
	}

	/**
	 * Setter for <code>log.log.user_id</code>.
	 */
	public void setUserId(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>log.log.user_id</code>.
	 */
	public Integer getUserId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>log.log.world_id</code>.
	 */
	public void setWorldId(Short value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>log.log.world_id</code>.
	 */
	public Short getWorldId() {
		return (Short) getValue(3);
	}

	/**
	 * Setter for <code>log.log.x</code>.
	 */
	public void setX(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>log.log.x</code>.
	 */
	public Integer getX() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>log.log.y</code>.
	 */
	public void setY(Short value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>log.log.y</code>.
	 */
	public Short getY() {
		return (Short) getValue(5);
	}

	/**
	 * Setter for <code>log.log.z</code>.
	 */
	public void setZ(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>log.log.z</code>.
	 */
	public Integer getZ() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>log.log.action</code>.
	 */
	public void setAction(Short value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>log.log.action</code>.
	 */
	public Short getAction() {
		return (Short) getValue(7);
	}

	/**
	 * Setter for <code>log.log.data</code>.
	 */
	public void setData(byte[] value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>log.log.data</code>.
	 */
	public byte[] getData() {
		return (byte[]) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, Timestamp, Integer, Short, Integer, Short, Integer, Short, byte[]> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, Timestamp, Integer, Short, Integer, Short, Integer, Short, byte[]> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Log.LOG.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field2() {
		return Log.LOG.TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Log.LOG.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field4() {
		return Log.LOG.WORLD_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Log.LOG.X;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field6() {
		return Log.LOG.Y;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return Log.LOG.Z;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field8() {
		return Log.LOG.ACTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field9() {
		return Log.LOG.DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value2() {
		return getTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value4() {
		return getWorldId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getX();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value6() {
		return getY();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getZ();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value8() {
		return getAction();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value9() {
		return getData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogRecord value2(Timestamp value) {
		setTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogRecord value3(Integer value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogRecord value4(Short value) {
		setWorldId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogRecord value5(Integer value) {
		setX(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogRecord value6(Short value) {
		setY(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogRecord value7(Integer value) {
		setZ(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogRecord value8(Short value) {
		setAction(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogRecord value9(byte[] value) {
		setData(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogRecord values(Integer value1, Timestamp value2, Integer value3, Short value4, Integer value5, Short value6, Integer value7, Short value8, byte[] value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached LogRecord
	 */
	public LogRecord() {
		super(Log.LOG);
	}

	/**
	 * Create a detached, initialised LogRecord
	 */
	public LogRecord(Integer id, Timestamp time, Integer userId, Short worldId, Integer x, Short y, Integer z, Short action, byte[] data) {
		super(Log.LOG);

		setValue(0, id);
		setValue(1, time);
		setValue(2, userId);
		setValue(3, worldId);
		setValue(4, x);
		setValue(5, y);
		setValue(6, z);
		setValue(7, action);
		setValue(8, data);
	}
}
